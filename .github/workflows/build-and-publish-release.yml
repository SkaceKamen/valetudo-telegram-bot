name: Build and release
concurrency: 
  cancel-in-progress: true
  group: build-and-release

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        architecture: [amd64, arm64, arm]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build
      run: env GOOS=linux GOARCH=${{ matrix.architecture }} go build -o valetudo-telegram-bot ./cmd/valetudo-telegram-bot/main.go

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: valetudo-telegram-bot-${{ matrix.architecture }}
        path: valetudo-telegram-bot

  release:
    name: Release
    needs: [build]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: builds
          pattern: valetudo-telegram-bot-*
      - name: Create random tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/' + context.sha,
              sha: context.sha
            })
      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.sha }}
          files: builds/*